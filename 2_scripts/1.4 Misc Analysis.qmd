---
title: "1.4 Misc Analysis"
format: html
editor: visual
---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

The aim of this file is to 1. used a simulated data to see if results from DBS samples are systematically underestimated when compared to venous samples, will that results in bad test performance (low sen & spec)?

2.  If the COI are the same, can we observe lower OR of test positivity among DBS samples?

## Load Packages

```{r}
library(dplyr)         # Pak for data management
library(WeightIt)
library(zoo)           # as.Date and month
library(ggplot2)       # for heatmap
```

## 1. Simulated Data

## Create simulate data

```{r}
# sample size = 2000
set.seed(996116)
ID<-1:2000
pos_true<-c(rep("negative",1200), rep("positive",800))
S_log<-c(rnorm(1200,mean=-0.6, sd=0.2),
         rnorm(800, mean=0.6, sd=0.3))
S_dbs=10^S_log
S_vbs<-S_dbs*1.0276 + 0.1111

pos_dbs<-if_else(S_dbs<=0.6, 0 , 1)
pos_vbs<-if_else(S_vbs<=0.6, 0 , 1)

table(pos_dbs, pos_vbs)
table(pos_dbs, pos_true)
table(pos_vbs, pos_true)
```

## Make a plot

```{r}
plot(ecdf(S_dbs),
     xlim = range(0.4, S_vbs),
     log='x',
     xaxt = 'n',
     col = "blue",
     main='eCDF of Quant Anti-S Assay Results - Using Simulated Data',
     xlab = 'Quant Anti-S Assay Results')
plot(ecdf(S_vbs),
     add = TRUE,
     lwd=2,
     lty = "dashed",
     col = "red")
axis(side=1, at=c(-0.4, 0, 1, 10, 100, 1000))
legend("bottomright", legend = c("DBS", "Venous"),
       lwd = 3, col = c("blue", "red"))
```

## 2. Same COI for Plasma (Venous) & DBS

```{r}
# Load data
load(file='../1_data/private/CLSA_com50.RData')
```

#### Recreate Anti-N test results

```{r}
CLSA_com50$N_same_COI<-
  if_else(CLSA_com50$NUCLEOCAPSID_ANTIBODY<0.103, 0,1)

# Unadjusted analysis
tab1<-table(CLSA_com50$N_same_COI, CLSA_com50$SER_NUCLEOCAPSID_COV, useNA = 'ifany')
colnames(tab1)<-c("Neg_Origin.N", "Pos_Origin.N")
rownames(tab1)<-c("Neg_same_COI.N", "Pos_same_COI.N")
tab1

lm09<-glm(N_same_COI~SER_ADM_COV, 
          data = CLSA_com50, family = binomial(link='logit'))
gtsummary::tbl_regression(lm09, exponentiate = TRUE)

lm09.a<-glm(SER_NUCLEOCAPSID_COV~SER_ADM_COV, 
          data = CLSA_com50, family = binomial(link='logit'))
gtsummary::tbl_regression(lm09.a, exponentiate = TRUE)
```

```{r}
# Adjusted analysis
# create clean dataset .c6
CLSA_com50.c6<-CLSA_com50 %>%
  dplyr::select(SER_ADM_COV, start_datetime_COV ,AGE_NMBR_COVID , age10, SEX_CLSA ,
            URBAN_RURAL_COVID, urban_rural,
            SER_ETHN_WH_COV  ,
            SER_EDU_COV ,
            DEP_CESD10_COVX ,
            dist_min , dist_min_km, dist_min_25km,
            time_vac15,
            PROV_5, outbreak, avgincidence_last7, avginc10_15d,
            SER_NUCLEOCAPSID_COV, SER_SPIKE_COV, SPIKE_ANTIBODY, NUCLEOCAPSID_ANTIBODY,
            N_same_COI)

CLSA_com50.c6<-CLSA_com50.c6 %>% 
  tidyr::drop_na()
```

```{r}
# Add weights
w.09 <- weightit(SER_ADM_COV~age10 + SEX_CLSA +
                             urban_rural +
                             SER_ETHN_WH_COV  +
                             SER_EDU_COV +
                             DEP_CESD10_COVX +
                             dist_min_km +
                             time_vac15 + outbreak, 
            data=CLSA_com50.c6, estimand = 'ATE', method = 'glm')
summary(w.09)
CLSA_com50.c6$w.weights<-w.09$weights
```

```{r}
# weighted analysis
lm09.w<-glm(N_same_COI~SER_ADM_COV, 
          data = CLSA_com50.c6, family = binomial(link='logit'),
          weights = w.weights)
gtsummary::tbl_regression(lm09.w, exponentiate = TRUE)
```

## 3. For quantitative anti-N who is higher: DBS

## Ecdf for anti-N quantitative

```{r}
plot(ecdf(CLSA_com50$NUCLEOCAPSID_ANTIBODY[CLSA_com50$SER_ADM_COV==0]),
     xlim = range(0.1, 100),
     log='x',
     xaxt = 'n',
     col = "green",
     main='eCDF of Quant Anti-N Assay Results - All',
     xlab = 'Quant Anti-N Assay Results')
plot(ecdf(CLSA_com50$NUCLEOCAPSID_ANTIBODY[CLSA_com50$SER_ADM_COV==1]),
     add = TRUE,
     lwd=2,
     lty = "dashed",
     col = "orange")
axis(side=1, at=c(0.001, 0.1, 1, 10, 100))
legend("bottomright", legend = c("DBS", "VBS"),
       lwd = 3, col = c("green", "orange"))

# This might be counter intuitive, since we've found higher risk of anti-N assay positive among venous samples.  
```

## A heatmap indicating the number of samples we have in each month

**Notes:** We are going to add this figure into the supplement section. We have two time stamps variables, the time when they did the questionnaire (start_date_COV) amd the time they went to DCS. For now we will go ahead with the questionnaire date but we need to confirm this with Jennifer.

General design: x-axis is time and align figures vertically so we can make comparison among all five regions:

```{r}
# five regions
table(CLSA_com50.c6$PROV_5, useNA = 'ifany')
attributes(CLSA_com50$PROV_5)

# Sampling time: start_datetime_COV
summary(CLSA_com50$start_datetime_COV)
table(is.na(CLSA_com50$start_datetime_COV), useNA='ifany')
# 2020/10/29 - 2021/08/18
```

#### Pre-process the CLSA data

```{r}
# add samplemonth var
CLSA_com50$samplemonth<-as.yearmon(CLSA_com50$start_datetime_COV)

tb1<-CLSA_com50 %>%
  group_by(samplemonth, PROV_5, SER_ADM_COV, .add=TRUE) %>%
  summarise(n = n(), )
```

#### Heatmap

```{r}
# creating the heatmap
hmap01<-ggplot(data = tb1[!is.na(tb1$samplemonth),], mapping = aes(x = samplemonth,
                                         y = PROV_5, fill = n)) +
  geom_tile() +
#  scale_x_date(limits = c(as.yearmon("2020-09-01"), as.yearmon("2021-09-01"))) +
  xlab(label = "Date of Sample Collection") +
  ylab(label = "Regions") +
  theme_bw() + 
  scale_fill_gradient(name = "Num. of Samples",
                      low = "#FFFFFF",
                      high = "red")

png(file="../3_intermediate/Fig.6 Heatmap.png", 
    width=2400, height=1440, res=300)
hmap01 + facet_wrap(~SER_ADM_COV, nrow = 2,
                    labeller = "label_both")
dev.off()
```

```{r}
# code DBS n as minus
tb1$n[tb1$SER_ADM_COV==0]= -1*tb1$n[tb1$SER_ADM_COV==0]

# Heatmap 02 - Heatmap, DBS (blue) over venous (red), by regions
hmap02<-ggplot(data = tb1[!is.na(tb1$samplemonth),],
               mapping = aes(x = samplemonth,
                             y = SER_ADM_COV, fill = n)) +
  geom_tile() +
  labs(title = "Heat map") +
  xlab(label = "Date of Sample Collection") +
  ylab(label = "") +
  theme_bw() + 
  scale_fill_gradient2(name = "Num. of Samples",
                      low = "blue", mid = "white", high = "red",
                      breaks=c(-400,-200,0,200,400),
                      labels=c("400-DBS","200",0,"200","400-Venous"),
                      limits=c(-400,400)) +
  theme(axis.text.y =element_blank(),
        axis.ticks.y=element_blank(),
        panel.background = element_rect(fill ="lightgrey"))

hmap02 +  facet_wrap(~PROV_5, nrow = 5)
```

#### Alton's comments on heatmap: I thought the total count of samples was similar for DBS vs venous but this looks much higher for DBS. Why is that? Is this before applying our study inclusion criteria?

```{r}
## The data we used for heatmap plotting is a summary table we generated using CLSA_com50 data. This is our study sample after applying inclusion & exclusion criteria. The total sample size is 7230. 

## Why it looks the DBS has more samples?
tb2<-CLSA_com50 %>%
  group_by(PROV_5, SER_ADM_COV, .add=TRUE) %>%
  summarise(n = n(), )

tb2
sum(tb2$n[tb2$SER_ADM_COV==0]) #DBS=  3773
sum(tb2$n[tb2$SER_ADM_COV==1]) #VBS=  3457
## Answer: the total sample sizes in two groups matches with the number we have in the maintext (2nd paragraph).

## Double check the data we used for plotting:
sum(tb1$n[tb1$SER_ADM_COV==0]) #DBS= -3773 (value changed to minus for blue color)
sum(tb1$n[tb1$SER_ADM_COV==1]) #VBS=  3457
```

```{r}
## Use histogram to present the difference:
tb3<-CLSA_com50 %>%
  group_by(samplemonth, SER_ADM_COV, .add=TRUE) %>%
  summarise(n = n(), )
tb3<-tb3[!is.na(tb3$samplemonth),]

plot(tb3[tb3$SER_ADM_COV==1,]$samplemonth, 
     tb3[tb3$SER_ADM_COV==1,]$n, type="b", col="red",
     xlab = "Month of Sample Collection", ylab = "Num. of Sample",
     main = "Figure S5A. DBS and venous sampling frequency by region",
     ylim = c(0,1500))
points(tb3[tb3$SER_ADM_COV==0,]$samplemonth, 
     tb3[tb3$SER_ADM_COV==0,]$n, col="blue")
lines(tb3[tb3$SER_ADM_COV==0,]$samplemonth, 
     tb3[tb3$SER_ADM_COV==0,]$n, col="blue", type='b')
legend("topright", legend = c("DBS", "Venous"),
       lwd = 3, col = c("blue", "red"))

## So Alton's comment is right -- DBS has more samples than venous. 
## We made another plot showing the number of samples collected in each month, grouped by sampling methods (DBS-blue, venous-red). The venous is more evenly distributed while the distribution of DBS has a high peak in 2021. The DBS peak matches with the wave we have in early 2021.

```

```{r}
# use ggplot for the plotting:

# First we modify data and make DBS negative (under x axis)
tb3$n.neg<-tb3$n*(-1)
tb3$n[tb3$SER_ADM_COV==0]<-tb3$n.neg[tb3$SER_ADM_COV==0]

p01<-ggplot(tb3, aes(samplemonth, n, fill = factor(SER_ADM_COV))) + 
  geom_bar(position = "stack", stat = 'identity')+
  labs(title = "Sampling Frequency",
       x="Date of Sample Collection", y="Num. of Samples",
       color = "") +
  scale_fill_manual("", labels = c("DBS", "Venous"), values=c("blue", "red")) +
  scale_y_continuous(breaks = seq(-1000, 500, by = 500), 
                     label = c("1000", "500","0","500"))+
  theme_bw() 

p01

# Print all plots panelled
png(file="../4_output/figs/Fig.S5 Heatmap and Freq.png", 
    width=2400, height=2400, res=300)
cowplot::plot_grid(p01, hmap02+  facet_wrap(~PROV_5, nrow = 5), 
                   rel_heights = c(1,2), align = "hv",
                   labels = c("A", "B"),
                   ncol = 1, nrow = 2)
dev.off()
```

## 4. Potential Data Quality Concerns

**Notes:** Our concerns: We found a discrepancy: Among venous plasma samples with negative test results, the anti-N S/Co ratio can reach as high as 0.24, which exceeds the COI applied (0.103).So we wonder if the COI for venous plasma samples has also changed like COIs applied to DBS samples?

```{r}
# Reload the CLSA_mn: This is the merged CLSA data with quant anti-N/S results. Based on this version of dataset we applied inclu/exclusion criteria (comprehensive cohort and <=50 km) and got our final dataset (CLSA_com50) for analysis.

load("~/dbs-vs-venous-antibodies/1_data/private/CLSA_mn.RData")
```

```{r}
# SER_ADM_COV: 2=DBS, 1=Venous
# SER_NUCLEOCAPSID_COV, 0=neg, 1=pos

# Use the code below to identify N=18 discrepancies, who are anti-N negative but has anti-N assay results above the COI applied for venous HP (0.103). Those discrepancies are only found within the anti-N negative venous group.
CLSA_mn %>%
  .[.$SER_ADM_COV==1 & .$SER_NUCLEOCAPSID_COV==0,] %>%
  .[.$NUCLEOCAPSID_ANTIBODY>=0.103,] %>%
  select(entity_id, NUCLEOCAPSID_ANTIBODY, SPIKE_ANTIBODY, SER_SPIKE_COV)
```

We got some replies from the CLSA data group, who confirmed that those 18 cases are caused by data entry error and they should have been categorized into DBS group. A updated ver of CLSA data will be share with the data team soon.


## 5. Add time variables into the model

#### 5.1 LR test, model with new time variable
```{r}
## The data used for predicting the use of venous sampling, in PSW
View(CLSA_com50.c6)

## Add time variable into the data
CLSA_com50.c6$time_3cat[CLSA_com50.c6$start_datetime_COV<as.Date("2021-04-01")]<-"Pre_April 21"
CLSA_com50.c6$time_3cat[CLSA_com50.c6$start_datetime_COV>=as.Date("2021-04-01") &
                        CLSA_com50.c6$start_datetime_COV<=as.Date("2021-05-31")]<-"April_May 21"
CLSA_com50.c6$time_3cat[CLSA_com50.c6$start_datetime_COV>as.Date("2021-05-31")]<-"June_Aug 21"

table(CLSA_com50.c6$time_3cat, useNA = 'ifany')
```
#### 5.2 Comparison among models 
```{r}
# old model: model.06u
# model 06p: outdated as we used an outbreak indicator in it--"outbreak"
# model 06u: the model for Fig S2, use avginc10_15d
# model 06t: model replace avginc10_15d with time_3cat
# model 06ut: model with both avginc10_15d and time_3cat

# The regression model: Best-fit Model, the scale
lm06.u <- glm(SER_ADM_COV~age10 + 
            SEX_CLSA +
            urban_rural +
            relevel(SER_ETHN_WH_COV, ref = '1=WH')  +
            SER_EDU_COV +
            DEP_CESD10_COVX +
            dist_min_25km +
            time_vac15 + avginc10_15d +
            PROV_5, 
            data=CLSA_com50.c6,
            family = binomial(link='logit'))
gtsummary::tbl_regression(lm06.u, exponentiate = T)
summary(lm06.u)

lm06.t <- glm(SER_ADM_COV~age10 + 
            SEX_CLSA +
            urban_rural +
            relevel(SER_ETHN_WH_COV, ref = '1=WH')  +
            SER_EDU_COV +
            DEP_CESD10_COVX +
            dist_min_25km +
            time_vac15 + time_3cat +
            PROV_5, 
            data=CLSA_com50.c6,
            family = binomial(link='logit'))
summary(lm06.t)

lm06.ut <- glm(SER_ADM_COV~age10 + 
            SEX_CLSA +
            urban_rural +
            relevel(SER_ETHN_WH_COV, ref = '1=WH')  +
            SER_EDU_COV +
            DEP_CESD10_COVX +
            dist_min_25km +
            time_vac15 + avginc10_15d + time_3cat +
            PROV_5, 
            data=CLSA_com50.c6,
            family = binomial(link='logit'))
summary(lm06.ut)

lmtest::lrtest(lm06.t, lm06.u)
```
```{r}
# lm06.r: as reference, no time variables
lm06.r   <- glm(SER_ADM_COV~age10 + 
            SEX_CLSA +
            urban_rural +
            relevel(SER_ETHN_WH_COV, ref = '1=WH')  +
            SER_EDU_COV +
            DEP_CESD10_COVX +
            dist_min_25km +
            time_vac15 +
            PROV_5, 
            data=CLSA_com50.c6,
            family = binomial(link='logit'))
summary(lm06.r)

# lm06.p: add outbreak indicator
lm06.p   <- glm(SER_ADM_COV~age10 + 
            SEX_CLSA +
            urban_rural +
            relevel(SER_ETHN_WH_COV, ref = '1=WH')  +
            SER_EDU_COV +
            DEP_CESD10_COVX +
            dist_min_25km +
            time_vac15 + outbreak +
            PROV_5, 
            data=CLSA_com50.c6,
            family = binomial(link='logit'))
summary(lm06.p)
```

**Note**: the model with new 3-category indicator works better than the old model we used for figure 2S (lm06.u). With the presence of this new time variable, adding 7-day average incidence (15 days before the date of sample collection) failed to improve the model fit significantly (lm06.ut). As the results of a short discussion with Alton we decided to continue our analysis with model lm06.t only.

```{r}
# Remove unnecessary models
rm(lm06.r, lm06.p, lm06.u, lm06.ut)
```

