---
title: "1.1.1 Additional Factors"
format: html
editor: visual
---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

## Load useful packages

```{r}
library(haven)         # Import csv and xlsx files
library(dplyr)         # Dataset management
library(gtsummary)     # Making ORs Tables
library(Hmisc)         # Adding labels to variables
```

## Load dataset

```{r}
# CLSA Covid data: this one might not be so useful for hosp and vacc info
CLSA_Covid<-read.csv("~/dbs-vs-venous-antibodies/1_data/private/2209005_McGill_ARussell_Covid/2209005_McGill_ARussell_Covid_Combined_v1-1.csv")

# CLSA Covid Antibody Data
CLSA_Antibody <- read.csv("~/dbs-vs-venous-antibodies/1_data/private/2209005_McGill_ARussell_Covid/2209005_McGill_ARussell_Covid_Antibody_Combined_NoIndigenousIdentifiers_v1.csv")

# CLSA_com50: subset, comprehesive cohort, with traveking dist < 50km
load(file = '~/dbs-vs-venous-antibodies/1_data/private/CLSA_com50.RData')
```

## Make a function for prop tab making:

```{r}
proptable_chisq2<-function(r){tab1<-table(r, CLSA_com50$SER_ADM_COV)
            tab1.prop<-round(prop.table(tab1, margin = 2), digits = 4)*100
            tab1.prop
            tab2<-cbind(tab1[,1], tab1.prop[,1], tab1[,2], tab1.prop[,2])
            colnames(tab2)<-c("DBS N", "DBS %",
                              "VBS N", "VBS %")
            #lab1<-attributes(r)
            #print(lab1$label)
            print(tab2)
            print(chisq.test(tab1))
            fisher.test(tab1, simulate.p.value = T)
}

# Test the function
# proptable_chisq2(CLSA_com50$time_vac15)
```

## Additional Factors: vaccination, PCR+, Time since last outbreak, provinces?

Theoratically if the PCR test results and vaccination can be well-adjusted, we won't need to adjust for other factors. For now let's clear them all up and see what we got in DBS vs VBS comparison:

```{r}
# A small subset including hosp, PCR & Vaccination time
CLSA_Time<-CLSA_Antibody %>%
  select(entity_id, start_datetime_COV, SER_HOSP_COV: SER_TEST20_COV, # Hosp, Test, Date
         SER_VAC_COV : SER_DOSE3_DATE_COV                             # Vacc dates
         )
```

#### 1. PCR and other available tests:

```{r}
# Ever tested in the past month - SYM_TEST_COVID
table(CLSA_Covid$SYM_TEST_COVID, useNA = 'ifany')       # N= 501 Yes

# Is the test positive? - SYM_TESTPOS_COVID
table(CLSA_Covid$SYM_TESTPOS_COVX, useNA = 'ifany')
table(CLSA_Covid$SYM_TEST_COVID, CLSA_Covid$SYM_TESTPOS_COVX, useNA = 'ifany')

# Being told have Covid but not tested - SYM_NTCONF_COVID

# ================== Not quite useful, use Antibody data instead ==========#
```

Using CLSA_Antibody data for PCR test results

```{r}
table(CLSA_Time$SER_TEST_COV, useNA = 'ifany')
# Only 5637 of 19934 have been tested for PCR

# we have 20 variables record the results of PCR tests
# another 20 slots are for dates
table(CLSA_Time$SER_RSLT1_COV, useNA = 'ifany')
table(CLSA_Time$SER_RSLT5_COV, useNA = 'ifany')
table(CLSA_Time$SER_RSLT10_COV, useNA = 'ifany')
table(CLSA_Time$SER_RSLT15_COV, useNA = 'ifany')
table(CLSA_Time$SER_RSLT19_COV, useNA = 'ifany')
table(CLSA_Time$SER_RSLT20_COV, useNA = 'ifany')

# If test result is not zero, delete the date
CLSA_Time$SER_TEST1_COV[!(CLSA_Time$SER_RSLT1_COV==1)]<-NA
CLSA_Time$SER_TEST2_COV[!(CLSA_Time$SER_RSLT2_COV==1)]<-NA
CLSA_Time$SER_TEST3_COV[!(CLSA_Time$SER_RSLT3_COV==1)]<-NA
CLSA_Time$SER_TEST4_COV[!(CLSA_Time$SER_RSLT4_COV==1)]<-NA
CLSA_Time$SER_TEST5_COV[!(CLSA_Time$SER_RSLT5_COV==1)]<-NA

CLSA_Time$SER_TEST6_COV[!(CLSA_Time$SER_RSLT6_COV==1)]<-NA
CLSA_Time$SER_TEST7_COV[!(CLSA_Time$SER_RSLT7_COV==1)]<-NA
CLSA_Time$SER_TEST8_COV[!(CLSA_Time$SER_RSLT8_COV==1)]<-NA
CLSA_Time$SER_TEST9_COV[!(CLSA_Time$SER_RSLT9_COV==1)]<-NA
CLSA_Time$SER_TEST10_COV[!(CLSA_Time$SER_RSLT10_COV==1)]<-NA

CLSA_Time$SER_TEST11_COV[!(CLSA_Time$SER_RSLT11_COV==1)]<-NA
CLSA_Time$SER_TEST12_COV[!(CLSA_Time$SER_RSLT12_COV==1)]<-NA
CLSA_Time$SER_TEST13_COV[!(CLSA_Time$SER_RSLT13_COV==1)]<-NA
CLSA_Time$SER_TEST14_COV[!(CLSA_Time$SER_RSLT14_COV==1)]<-NA
CLSA_Time$SER_TEST15_COV[!(CLSA_Time$SER_RSLT15_COV==1)]<-NA

CLSA_Time$SER_TEST16_COV[!(CLSA_Time$SER_RSLT16_COV==1)]<-NA
CLSA_Time$SER_TEST17_COV[!(CLSA_Time$SER_RSLT17_COV==1)]<-NA
CLSA_Time$SER_TEST18_COV[!(CLSA_Time$SER_RSLT18_COV==1)]<-NA
CLSA_Time$SER_TEST19_COV[!(CLSA_Time$SER_RSLT19_COV==1)]<-NA
CLSA_Time$SER_TEST20_COV[!(CLSA_Time$SER_RSLT20_COV==1)]<-NA

# correct the format to Date
CLSA_Time$start_datetime_COV<-as.Date((CLSA_Time$start_datetime_COV), format="%Y-%m-%d")
CLSA_Time$SER_TEST1_COV<-as.Date((CLSA_Time$SER_TEST1_COV), format="%Y-%m-%d")
CLSA_Time$SER_TEST2_COV<-as.Date((CLSA_Time$SER_TEST2_COV), format="%Y-%m-%d")
CLSA_Time$SER_TEST3_COV<-as.Date((CLSA_Time$SER_TEST3_COV), format="%Y-%m-%d")
CLSA_Time$SER_TEST4_COV<-as.Date((CLSA_Time$SER_TEST4_COV), format="%Y-%m-%d")
CLSA_Time$SER_TEST5_COV<-as.Date((CLSA_Time$SER_TEST5_COV), format="%Y-%m-%d")

CLSA_Time$SER_TEST6_COV<-as.Date((CLSA_Time$SER_TEST6_COV), format="%Y-%m-%d")
CLSA_Time$SER_TEST7_COV<-as.Date((CLSA_Time$SER_TEST7_COV), format="%Y-%m-%d")
CLSA_Time$SER_TEST8_COV<-as.Date((CLSA_Time$SER_TEST8_COV), format="%Y-%m-%d")
CLSA_Time$SER_TEST9_COV<-as.Date((CLSA_Time$SER_TEST9_COV), format="%Y-%m-%d")
CLSA_Time$SER_TEST10_COV<-as.Date((CLSA_Time$SER_TEST10_COV), format="%Y-%m-%d")

CLSA_Time$SER_TEST11_COV<-as.Date((CLSA_Time$SER_TEST11_COV), format="%Y-%m-%d")
CLSA_Time$SER_TEST12_COV<-as.Date((CLSA_Time$SER_TEST12_COV), format="%Y-%m-%d")
CLSA_Time$SER_TEST13_COV<-as.Date((CLSA_Time$SER_TEST13_COV), format="%Y-%m-%d")
CLSA_Time$SER_TEST14_COV<-as.Date((CLSA_Time$SER_TEST14_COV), format="%Y-%m-%d")
CLSA_Time$SER_TEST15_COV<-as.Date((CLSA_Time$SER_TEST15_COV), format="%Y-%m-%d")

CLSA_Time$SER_TEST16_COV<-as.Date((CLSA_Time$SER_TEST16_COV), format="%Y-%m-%d")
CLSA_Time$SER_TEST17_COV<-as.Date((CLSA_Time$SER_TEST17_COV), format="%Y-%m-%d")
CLSA_Time$SER_TEST18_COV<-as.Date((CLSA_Time$SER_TEST18_COV), format="%Y-%m-%d")
CLSA_Time$SER_TEST19_COV<-as.Date((CLSA_Time$SER_TEST19_COV), format="%Y-%m-%d")
CLSA_Time$SER_TEST20_COV<-as.Date((CLSA_Time$SER_TEST20_COV), format="%Y-%m-%d")


# now find the last day of positive PCR test:
CLSA_Time<-CLSA_Time %>% 
  rowwise() %>%
  mutate(PCR_DATE_last = max(SER_TEST1_COV, SER_TEST2_COV, SER_TEST3_COV,
                             SER_TEST4_COV, SER_TEST5_COV, SER_TEST6_COV,
                             SER_TEST7_COV, SER_TEST8_COV, SER_TEST9_COV,
                             SER_TEST10_COV, SER_TEST11_COV, SER_TEST12_COV,
                             SER_TEST13_COV, SER_TEST14_COV, SER_TEST15_COV,
                             SER_TEST16_COV, SER_TEST17_COV, SER_TEST18_COV,
                             SER_TEST19_COV, SER_TEST20_COV, na.rm = T))

# if all NAs, max()
CLSA_Time$PCR_DATE_last[is.infinite(CLSA_Time$PCR_DATE_last)==T]<-NA
summary(CLSA_Time$PCR_DATE_last)

# Calculate time since last PCR+ test
CLSA_Time$pcr_time<-CLSA_Time$start_datetime_COV - CLSA_Time$PCR_DATE_last

# Add pcr_time to com50 data
CLSA_com50<-merge(CLSA_com50, select(CLSA_Time, entity_id, pcr_time), by='entity_id',
      all.x = T, all.y = F)

hist(as.numeric(CLSA_com50$pcr_time), breaks = 40,
     main = 'Distribution of time since last PCR+ Test',
     xlab = 'Time Since Last PCR+ Test (Days)')
table(CLSA_com50$pcr_time, useNA = "ifany")
# too much missing, not useful

# Temp cleaning code for CLSA_com50
# CLSA_com50<-select(CLSA_com50, -c(SER_HOSP_COV, SER_RSLT_SUM, SER_RSLT_SUM_bin,
#                                   pcr_time.x, pcr_time.y))

```

Numbers of PCR+ tests

```{r}
if_else2<-function(x){
  if_else(x==1,1,0)
}

# Number of all PCR+ tests  
CLSA_Temp<-CLSA_Time %>%
  select(SER_RSLT1_COV : SER_RSLT20_COV) %>%
  mutate_all(., if_else2)

CLSA_Time$SER_RSLT_SUM<-rowSums(select(CLSA_Temp, SER_RSLT1_COV : SER_RSLT20_COV),na.rm = T)
table(CLSA_Time$SER_RSLT_SUM, useNA = 'ifany')

# Make it binary
CLSA_Time$SER_RSLT_SUM_bin<-rep(0, 19334)
CLSA_Time$SER_RSLT_SUM_bin[CLSA_Time$SER_RSLT_SUM %in% c(1,2,5)]<-1
table(CLSA_Time$SER_RSLT_SUM_bin, CLSA_Time$SER_RSLT_SUM, useNA = 'ifany')

CLSA_Time$SER_RSLT_SUM_bin15<-rep(0, 19334)
CLSA_Time$SER_RSLT_SUM_bin15[CLSA_Time$pcr_time>15 &
                             is.na(CLSA_Time$pcr_time)==F]<-1
table(CLSA_Time$SER_RSLT_SUM_bin15, CLSA_Time$SER_RSLT_SUM, useNA = 'ifany')

# Merge those new variables to com50
CLSA_com50<-merge(CLSA_com50, select(CLSA_Time, entity_id, SER_RSLT_SUM, 
                                     SER_RSLT_SUM_bin, SER_RSLT_SUM_bin15),
                  by='entity_id', all.x = T, all.y = F)
table(CLSA_com50$SER_RSLT_SUM_bin15, CLSA_com50$SER_RSLT_SUM, useNA = 'ifany')

save(CLSA_com50, file = '~/dbs-vs-venous-antibodies/1_data/private/CLSA_com50.RData')
```

#### Showcase with {dplyr}

```{r}
# Those with Days to Last PCR+ Test Available (N=67)
CLSA_com50 %>%
  select(., entity_id, pcr_time, SER_RSLT_SUM, SER_RSLT_SUM_bin) %>%
  .[is.na(.$pcr_time)==F,]

# Those who ever had PCR+ Tests (N=68)
CLSA_com50 %>%
  select(., entity_id, pcr_time, SER_RSLT_SUM, SER_RSLT_SUM_bin) %>%
  .[.$SER_RSLT_SUM_bin==1,]

# Those who had PCR+ test >15 days ago, N=64
CLSA_com50 %>%
  select(., entity_id, pcr_time, SER_RSLT_SUM, SER_RSLT_SUM_bin) %>%
  .[.$SER_RSLT_SUM_bin==1 & .$pcr_time>15 & is.na(.$pcr_time>15)==F,]

# id = 10935126, this one had 1 PCR+ test before but forgot about the date 
CLSA_Antibody %>%
  select(entity_id, SER_RSLT1_COV, SER_RSLT2_COV, SER_TEST1_COV, SER_TEST2_COV) %>%
  .[.$entity_id == 10935126,]
```

##### Show the distribution DBS vs VBS

```{r}
CLSA_com50<-merge(CLSA_com50, select(CLSA_Time, entity_id, SER_RSLT_SUM, SER_RSLT_SUM_bin),
                  by='entity_id', all.x = T, all.y = F)
table(CLSA_com50$SER_RSLT_SUM, useNA = 'ifany')
table(CLSA_com50$SER_RSLT_SUM_bin, useNA = 'ifany') # only 40 have been positive results

save(CLSA_com50, file = '~/dbs-vs-venous-antibodies/1_data/private/CLSA_com50.RData')

# Making prop tables
proptable_chisq2(CLSA_com50$SER_RSLT_SUM_bin)
proptable_chisq2(CLSA_com50$SER_RSLT_SUM)
```

#### 2. Vaccination Info （CLSA_Antibody Data）

```{r}
CLSA_Antibody %>%
  .[.$SER_TEST_COV>=1,] %>%
  select(., entity_id, SER_AGE_COV, SER_SEX_COV, start_datetime_COV,
         SER_HOSP_COV, SER_TEST_COV, SER_TEST_NB_COV, SER_RSLT1_COV,
         SER_RSLT2_COV, SER_RSLT3_COV, SER_TEST1_COV, SER_TEST2_COV,
         SER_TEST3_COV
) # Looks good

# Do vaccination date first
table(CLSA_Time$SER_VAC_COV, useNA = 'ifany')          # have you received at least one dose?
table(CLSA_Time$SER_VDOSE_COV, useNA = 'ifany')        # number of dose received

table(CLSA_Time$SER_VAC_COV, CLSA_Time$SER_VDOSE_COV, useNA = 'ifany')

# Clean the dose date data
CLSA_Time$SER_DOSE1_DATE_COV<-as.Date((CLSA_Time$SER_DOSE1_DATE_COV), format="%Y-%m-%d")
CLSA_Time$SER_DOSE2_DATE_COV<-as.Date((CLSA_Time$SER_DOSE2_DATE_COV), format="%Y-%m-%d")
CLSA_Time$SER_DOSE3_DATE_COV<-as.Date((CLSA_Time$SER_DOSE3_DATE_COV), format="%Y-%m-%d")
CLSA_Time$start_datetime_COV<-as.Date((CLSA_Time$start_datetime_COV), format="%Y-%m-%d")

CLSA_Time<-CLSA_Time %>% 
  rowwise() %>%
  mutate(DOSE_DATE_last = max(SER_DOSE1_DATE_COV, SER_DOSE2_DATE_COV,
                              SER_DOSE3_DATE_COV, na.rm = T))
CLSA_Time$DOSE_DATE_last[is.infinite(CLSA_Time$DOSE_DATE_last)==T]<-NA
summary(CLSA_Time$DOSE_DATE_last)

# number of days since last vaccinatiion
CLSA_Time<-CLSA_Time %>%
  mutate(time_vac = start_datetime_COV - DOSE_DATE_last)

summary(as.numeric(CLSA_Time$time_vac))
hist(as.numeric(CLSA_Time$time_vac), breaks = 40,
     xlab = 'Time Since Last Vaccination (Days)')

# show those with negative, N=19 
time_vac_neg<-CLSA_Time %>%
  .[as.numeric(.$time_vac)<0 & is.na(.$time_vac)==F &
    .$SER_VDOSE_COV>1,] %>%
  select(entity_id, start_datetime_COV, DOSE_DATE_last, SER_VDOSE_COV, time_vac)
# All those with negative and multiple vac date have two doses, most 1st dose time missing

# Replace those with 2 doses and neg vac_time
CLSA_Time %>%
  .[.$entity_id %in% time_vac_neg$entity_id,] %>%
  mutate(time_vac = start_datetime_COV - SER_DOSE1_DATE_COV)
CLSA_Time$time_vac[CLSA_Time$entity_id==44259476]<-24
CLSA_Time$time_vac[CLSA_Time$entity_id==51191412]<-34
CLSA_Time$time_vac[CLSA_Time$entity_id==58376055]<-41

# Then code the rest of vaccination time to 0
CLSA_Time$time_vac[as.numeric(CLSA_Time$time_vac)<0]<-NA

# if vac_time > 15, vaccines takes ~ 15 days to boost immunity and elevate Ab level
CLSA_Time$time_vac15 <- rep(0,19334)
CLSA_Time$time_vac15[CLSA_Time$time_vac>15 & CLSA_Time$time_vac<365]<-1
```

merge time_vac15 to com50 cohort data:

```{r}
CLSA_com50<-merge(CLSA_com50, select(CLSA_Time, entity_id, time_vac, time_vac15), by='entity_id',
      all.x = T, all.y = F)

table(CLSA_com50$time_vac15, useNA = 'ifany')
proptable_chisq2(CLSA_com50$time_vac15)

save(CLSA_com50, file = '~/dbs-vs-venous-antibodies/1_data/private/CLSA_com50.RData')
```

Histogram: using comprehensive cohort (\<50 km)

```{r}
hist(as.numeric(CLSA_com50$time_vac), breaks = 40,
     xlab = 'Time Since Last Vaccination (Days)',
     main = "Distribution of Time Since Last Vaccination, 
             Comprehensive Cohort < 50km")
```

#### 3. Hospitalization: have you ever been hospitalized due to Covid-19?

```{r}
table(CLSA_Time$SER_HOSP_COV, useNA = 'ifany')

# only around ~ 770 persons answered this question, HUGE missing
CLSA_Time$SER_HOSP_COV[CLSA_Time$SER_HOSP_COV %in% c(-99999, 98)]<-NA

# Anyway, add it to com50
CLSA_com50<-merge(CLSA_com50, select(CLSA_Time, entity_id, SER_HOSP_COV), by='entity_id',
      all.x = T, all.y = F)
table(CLSA_com50$SER_HOSP_COV, useNA = 'ifany') # only 9 have been hospitalized

save(CLSA_com50, file = '~/dbs-vs-venous-antibodies/1_data/private/CLSA_com50.RData')
```

#### Alton's question:Of those 9 how many were veneous?

```{r}
table(CLSA_com50$SER_HOSP_COV, CLSA_com50$SER_ADM_COV,
      useNA = 'ifany') 
proptable_chisq2(CLSA_com50$SER_HOSP_COV)

# only 9 have been hospitalized
```

#### 4. Geographic Regions: five groups:

```{r}
#  BC, (AB+SK+MT), ON, QC, (All Atlantic provinces in the east)
table(CLSA_com50$PROV_COVID, useNA = 'ifany')
# Not all 10 provinces from CLSA dataset were included, only 7 of them

CLSA_com50$PROV_5<-rep(0, length(CLSA_com50$PROV_COVID))
CLSA_com50$PROV_5[CLSA_com50$PROV_COVID %in% c(10, 12)]<-1
CLSA_com50$PROV_5[CLSA_com50$PROV_COVID %in% c(24)]<-2
CLSA_com50$PROV_5[CLSA_com50$PROV_COVID %in% c(35)]<-3
CLSA_com50$PROV_5[CLSA_com50$PROV_COVID %in% c(46,48)]<-4
CLSA_com50$PROV_5[CLSA_com50$PROV_COVID %in% c(59)]<-5

# Add format
CLSA_com50$PROV_5 = factor(CLSA_com50$PROV_5,levels=c("1","2","3","4","5"))
levels(CLSA_com50$PROV_5)=c("1 = NF & NS","2 = QC","3 = ON","4 = MT & AB","5 = BC")
label(CLSA_com50$PROV_5)="Prov Group"

# Cross Tabulation to Verify
table(CLSA_com50$PROV_5, CLSA_com50$PROV_COVID, useNA = 'ifany')
```

Then we compare the difference of dist between DBS vs VBS

```{r}
proptable_chisq2(CLSA_com50$PROV_5)

## Make a simple logistic reg model to show the diff in each provincal group
lm_prov<-glm(CLSA_com50$SER_ADM_COV~relevel(CLSA_com50$PROV_5, ref = '5 = BC'),
             family = binomial(link = "logit"))
summary(lm_prov)

# Use Odds Ratio Table to present the results, BC as ref
lm_prov %>%
  tbl_regression(exponentiate = TRUE)
```

#### 5. Time since last outbreak

```{r}
# Time of sample collection, need to get it from CLSA_Time 
CLSA_com50<-merge(CLSA_com50, select(CLSA_Time, entity_id, start_datetime_COV), 
      by = 'entity_id', all.x=T, all.y = F)

summary(CLSA_com50$start_datetime_COV)
# 2020/10/29 - 2021/08/18

# Period when >50 7-day-ave daily new cases (WHO)
# https://ourworldindata.org/covid-cases

CLSA_com50$outbreak<-rep(NA, 7230)
CLSA_com50$outbreak<-ifelse(CLSA_com50$start_datetime_COV - as.Date('2021-06-21', 
                            format="%Y-%m-%d") >0, 0, 1)

table(CLSA_com50$outbreak, useNA = 'ifany')
# 0 = 15 days ago not in outbreak
# 1 = 15 days ago in outbreak

proptable_chisq2(CLSA_com50$outbreak)
```

```{r}
## Make a simple logistic reg model to show the diff
lm_outbreak<-glm(CLSA_com50$SER_ADM_COV~CLSA_com50$outbreak,
             family = binomial(link = "logit"))
summary(lm_outbreak)

# Use Odds Ratio Table to present the results, not in the outbreak as ref
lm_outbreak %>%
  tbl_regression(exponentiate = TRUE)
```

#### Get daily new cases from WHO data

```{r}
#The daily cases data
owid.covid.data <- read.csv("~/dbs-vs-venous-antibodies/1_data/owid-covid-data.csv")
owid_covid<-owid.covid.data %>%
  select(iso_code, location, date : reproduction_rate) %>%
  .[.$iso_code=='CAN',]

# correct format of dates
owid_covid$date<-as.Date(owid_covid$date, format="%Y-%m-%d")
owid_covid$date15<-owid_covid$date+15

summary(owid_covid$date)
summary(owid_covid$date15)

# Add daily cases number to CLSA_com50 data
CLSA_com50<-merge(CLSA_com50, select(owid_covid, date15, new_cases_per_million), 
      by.x='start_datetime_COV', by.y = 'date15',
      all.x = T, all.y = F)

# use t-test to compare the diff
var.test(new_cases_per_million~SER_ADM_COV, data = CLSA_com50)
t.test(new_cases_per_million~SER_ADM_COV, data = CLSA_com50, var.equal=F)
```

#### Get province-specific data, new cases per million
```{r}
# The prov specific data is not available in WHO, need to use data driectly from canada.ca instead: https://health-infobase.canada.ca/covid-19/#a4

# load csv
library(readr)
Canada_Covid <- read_csv("1_data/Canada Dep Health_covid19.csv", 
    col_types = cols(date = col_date(format = "%Y-%m-%d")))

# Days + 15, time for Ab level to rise up after infection/vax
Canada_Covid$date<-Canada_Covid$date+15

Canada_Covid1<-Canada_Covid
Canada_Covid1$date<-Canada_Covid$date-1

Canada_Covid2<-Canada_Covid
Canada_Covid2$date<-Canada_Covid$date-2

Canada_Covid3<-Canada_Covid
Canada_Covid3$date<-Canada_Covid$date-3

Canada_Covid4<-Canada_Covid
Canada_Covid4$date<-Canada_Covid$date-4

Canada_Covid5<-Canada_Covid
Canada_Covid5$date<-Canada_Covid$date-5

Canada_Covid6<-Canada_Covid
Canada_Covid6$date<-Canada_Covid$date-6

Canada_Covid7<-rbind.data.frame(Canada_Covid, Canada_Covid1, Canada_Covid2,
                 Canada_Covid3, Canada_Covid4, Canada_Covid5,
                 Canada_Covid6)

# Merge the avgincidence_last7 with CLSA_com50
CLSA_com50<-merge(CLSA_com50, select(Canada_Covid7, pruid, date, avgincidence_last7), 
      by.x = c('PROV_COVID', 'start_datetime_COV'), 
      by.y = c('pruid', 'date'),
      all.x = T, all.y = F)

save(CLSA_com50, file = '../1_data/private/CLSA_com50.RData')
```


## To make the ggplotting much easier, adding formats and labels

```{r}
# Add Format

# urban/rural
CLSA_com50$URBAN_RURAL_COVID = as.factor(CLSA_com50$URBAN_RURAL_COVID)
levels(CLSA_com50$URBAN_RURAL_COVID)=c("0 = Rural","1 = Urban Core",
                                       "2 = Urban Fringe",
                                       "4 = Urban out CMA/CAs",
                                       "6 = 2nd urban core",
                                       "9 = DA only")

# Race/eth
CLSA_com50$SER_ETHN_WH_COV[CLSA_com50$SER_ETHN_WH_COV==-88888]<-NA
CLSA_com50$SER_ETHN_WH_COV = as.factor(CLSA_com50$SER_ETHN_WH_COV)
levels(CLSA_com50$SER_ETHN_WH_COV)=c("0 = Non-WH", "1=WH")

# Education
table(CLSA_com50$SER_EDU_COV, useNA = 'ifany')
CLSA_com50$SER_EDU_COV = as.factor(CLSA_com50$SER_EDU_COV)
levels(CLSA_com50$SER_EDU_COV)=c("1 = <High School", "2 = High School",
                                     "3 = Vocational Tr", "4 = Non-uni cert",
                                     "5 = Bachelor", "6 = Graduate")

# Vaccination Status
table(CLSA_com50$time_vac15, useNA = 'ifany')
CLSA_com50$time_vac15 <- as.factor(CLSA_com50$time_vac15)
levels(CLSA_com50$time_vac15)=c("0 = No", "1 = Yes")

# Outbreak
table(CLSA_com50$outbreak, useNA = 'ifany')
CLSA_com50$outbreak <- as.factor(CLSA_com50$outbreak)
levels(CLSA_com50$outbreak)=c("0 = No", "1 = Yes")
```

```{r}
# Labels, from {Hmisc} pak
Hmisc::label(CLSA_com50$AGE_NMBR_COVID)="Age"
Hmisc::label(CLSA_com50$SEX_CLSA)="Sex"
Hmisc::label(CLSA_com50$URBAN_RURAL_COVID)="Urban/Rural"
Hmisc::label(CLSA_com50$SER_EDU_COV)="Education"
Hmisc::label(CLSA_com50$SER_ETHN_WH_COV)="Race Binary"
Hmisc::label(CLSA_com50$DEP_CESD10_COVX)="Dep Scale"
Hmisc::label(CLSA_com50$dist_min)='Travel Dist'
Hmisc::label(CLSA_com50$time_vac15)='Vax over 15 Days'
Hmisc::label(CLSA_com50$outbreak)="Outbreak Peaks"
Hmisc::label(CLSA_com50$PROV_5)="Prov Group"

Hmisc::label(CLSA_com50$avgincidence_last7)="Avg inc in the wk 15D ago"
```

Those in DBS group has more daily new cases 15 days before the sampling day.

## Save the dataset

```{r}
save(CLSA_com50, file = '~/dbs-vs-venous-antibodies/1_data/private/CLSA_com50.RData')
save(owid_covid, file = '~/dbs-vs-venous-antibodies/1_data/owid_covid.RData')
```
