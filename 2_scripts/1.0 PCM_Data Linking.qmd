---
title: "1.0 PCM_Data Linking"
author: Jiacheng Chen
format: html
editor: visual
date: 21 June 2023
---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

## Load necessary paks

```{r}
library(haven)
library(dplyr)
library(epiR)          # make epi tables
```

## Import the CLSA Datasets

```{r}
# CLSA Covid Study Data
CLSA_Covid<-read.csv("~/dbs-vs-venous-antibodies/1_data/private/2209005_McGill_ARussell_Covid/2209005_McGill_ARussell_Covid_Combined_v1-1.csv")

# CLSA Covid Antibody Data
CLSA_Antibody <- read.csv("~/dbs-vs-venous-antibodies/1_data/private/2209005_McGill_ARussell_Covid/2209005_McGill_ARussell_Covid_Antibody_Combined_NoIndigenousIdentifiers_v1.csv")
## This one has fewer participants, compare to the CLSA_Covid dataset
```

## Check the CLSA Covid Datasets

#### Demographic Part

```{r}
## Age
## Participant age (first completed COVID-19 interview)
str(CLSA_Covid$AGE_NMBR_COVID)
hist(CLSA_Covid$AGE_NMBR_COVID)
# Most Participants are aged from 55 to 75.

## Sex
## Sex at birth reported at baseline
str(CLSA_Covid$SEX_CLSA)
table(CLSA_Covid$SEX_CLSA, useNA = 'ifany')
## F/M ~= 1:1

## Race/Ethnicity
## Education
## Income
## Insurance Coverage

# Those four variables are missing, probably we can find those in other dataset
```

#### More info: https://www150.statcan.gc.ca/n1/pub/92-195-x/2011001/geo/cma-rmr/def-eng.htm

## Which cohort?

```{r}
table(CLSA_Covid$cohort, useNA = 'ifany')
# beware we have tracking cohort in this dataset

# Comprehensive
# Tracking
```

## Geo Location Variables

```{r}
## FSA
str(CLSA_Covid$FSA_COVID)
table(CLSA_Covid$FSA_COVID[CLSA_Covid$PROV_COVID==48])

## Province code
str(CLSA_Covid$PROV_COVID)
table(CLSA_Covid$PROV_COVID, useNA = 'ifany')
# the code 48 means Alberta, N=2894

## Urban/Rural Indentifier:
str(CLSA_Covid$URBAN_RURAL_COVID)
table(CLSA_Covid$URBAN_RURAL_COVID, useNA = 'ifany')
# 0 = Rural
# 1 = Urban Core
# 2 = Urban Fringe
# 4 = Urban areas out of CMA/CA
# 6 = Secondary Cores
# 9 = DA Only

# Cross-tab showing distribution of each Urban category, across all provinces
table(CLSA_m$URBAN_RURAL_COVID, CLSA_m$PROV_COVID, useNA = 'ifany')
# 48 is AB

# Population Center and Pop Density Var - Those two might have addi info
## Pop cntr
str(CLSA_Covid$POP_CNTR_COVID)
table(CLSA_Covid$POP_CNTR_COVID, useNA = 'ifany')
# Cross-tab with Urban_Rural
table(CLSA_Covid$POP_CNTR_COVID, CLSA_Covid$URBAN_RURAL_COVID, useNA = 'ifany')

## Pop density
str(CLSA_Covid$POP_DENSITY_COVID)
hist(CLSA_Covid$POP_DENSITY_COVID[CLSA_Covid$POP_DENSITY_COVID>0], breaks = 30)
boxplot(CLSA_Covid$POP_DENSITY_COVID[CLSA_Covid$POP_DENSITY_COVID>0])

nrow(CLSA_Covid[CLSA_Covid$POP_DENSITY_COVID==0,]) # N=168
```

## Load FSA location and distance data

```{r}
# The code for travel distance estimation is 1.1 Travel Distance Est.qmd
FSA_Center_small<-load("~/AB_Geo/FSA_Center_fixed.RData")
```

# CLSA Antibody Dataset

## Antibody

```{r}
# Anti-N
str(CLSA_Antibody$SER_NUCLEOCAPSID_COV)
table(CLSA_Antibody$SER_NUCLEOCAPSID_COV, useNA = 'ifany')
# About 4% positive rate
# -99999 = skip
# -88888 = missing
# Recode those two to NA

# Anti-S
table(CLSA_Antibody$SER_SPIKE_COV, useNA = 'ifany')
# About 46% positive, beware this % is infected + vaccinated

# The Covid-19 Infection Status based on the 2-by-2 table of Anti-N & Anti-S
table(CLSA_Antibody$SER_ABRSLT_COV, useNA = 'ifany')

# Cross-tab anti-N & anto-S
table(CLSA_Antibody$SER_SPIKE_COV, CLSA_Antibody$SER_NUCLEOCAPSID_COV, useNA = 'ifany')
# Anit-N + only: prior Cov infection only
# Anti-S + only: prior Cov infection, vaccination, or both
# Both +       : prior Cov infection or both
# Both -       : none
```

## Sampling Methods: Venous or Dry Blood Spot

```{r}
str(CLSA_Antibody$SER_ADM_COV)
table(CLSA_Antibody$SER_ADM_COV, useNA = 'ifany')
# 1 = Venous
# 2 = Dry Blood Spot

str(CLSA_Antibody$SER_ADM_COV)
table(CLSA_Antibody$SER_ADM_COV, useNA = 'ifany')
```

## Merging the datasets, only selecting useful variables.

```{r}
# Create subsets for each one:

# CLSA_Covid data
CLSA_Covid_small<-select(CLSA_Covid, entity_id, cohort,
                                AGE_NMBR_COVID, SEX_CLSA,
                                PROV_COVID,
                                FSA_COVID,
                                URBAN_RURAL_COVID,
                                CCC_LTC_ASTHM_COVID,
                                CCC_LTC_COPD_COVID,
                                CCC_LTC_OTLD_COVID,
                                CCC_LTC_DIA_COVID,
                                CCC_LTC_HBP_COVID,
                                CCC_LTC_HEART_COVID,
                                CCC_LTC_CANC_COVID,
                                CCC_LTC_FAIL_COVID,
                                CCC_LTC_AUTOIMD_COVID,
                                CCC_LTC_DRPNEU_COVID,
                                CCC_LTC_HIV_COVID,
                                CCC_LTC_NONE_COVID,
                                CCC_TRANSP_COVID,
                                CCC_CHEMO_COVID,
                                FUL_SIT1H_COVX,
                                FUL_SIT1HDG_COVX,
                                FUL_FSTR_COVX,
                                FUL_FSTRDG_COVX,
                                FUL_WK23B_COVX,
                                FUL_WK23BDG_COVX,
                                DEP_CESD10_COVX,
                                GAD_NBRMIS_COVX)

## CLSA Antibody Data
CLSA_Antibody_small<-select(CLSA_Antibody, entity_id,
                            #start_datetime_COV,       #Interview date, not useful
                            #ICQ_start_datetime_COV,   #DCS visit date, not useful
                            SER_ETHN_WH_COV,
                            SER_ETHN_SA_COV,
                            SER_ETHN_ZH_COV,
                            SER_ETHN_BL_COV,
                            SER_ETHN_FP_COV,
                            SER_ETHN_LA_COV,
                            SER_ETHN_AR_COV,
                            SER_ETHN_SE_COV,
                            SER_ETHN_WA_COV,
                            SER_ETHN_KO_COV,
                            SER_ETHN_JA_COV,
                            SER_ETHN_OTSP_COV,
                            SER_ETHN_DK_NA_COV,
                            SER_ETHN_REFUSED_COV,
                            SER_EDU_COV,
                            SER_FAMPH_COV,
                            SER_NUCLEOCAPSID_COV,
                            SER_SPIKE_COV,
                            SER_ABRSLT_COV,
                            SER_ADM_COV)

# looks good, now merge those two
CLSA_m<-merge(CLSA_Covid_small, CLSA_Antibody_small, by = "entity_id", all=FALSE)
# We got N=14437 Obs in the merged dataset

```

## Clean the merged data
```{r}
## The Anti-N
CLSA_m$SER_NUCLEOCAPSID_COV[CLSA_m$SER_NUCLEOCAPSID_COV<0]<-NA
table(CLSA_m$SER_NUCLEOCAPSID_COV, useNA = 'ifany')

## The VBS vs DBS
## CLSA_m$SER_ADM_COV[CLSA_m$SER_ADM_COV==2]<-0

# Age Var - numeric, good
# Gender var - two categories, directly useable

# Urban/Rural categories
table(CLSA_m$URBAN_RURAL_COVID, useNA = 'ifany')
CLSA_m$URBAN_RURAL_COVID[CLSA_m$URBAN_RURAL_COVID==-88888]<-NA

## Education
table(CLSA_m$SER_EDU_COV, useNA = 'ifany')
CLSA_m$SER_EDU_COV[CLSA_m$SER_EDU_COV %in% c(-88888,98,99)]<-NA

## Primary Care
table(CLSA_m$SER_FAMPH_COV, useNA = 'ifany')
CLSA_m$SER_FAMPH_COV[CLSA_m$SER_FAMPH_COV %in% c(-88888,98,99)]<-NA

## Physical Health
table(CLSA_m$CCC_LTC_NONE_COVID, useNA = 'ifany')
## So all paticipants has some minor health conditions, considering their age it make sense

## Mobility
#### Stand up
table(CLSA_m$FUL_SIT1H_COVX, useNA = 'ifany')
CLSA_m$FUL_SIT1H_COVX[CLSA_m$FUL_SIT1H_COVX %in% c(-88888,3,9,8)]<-NA

#### Walk up/down stairs
table(CLSA_m$FUL_FSTR_COVX, useNA = 'ifany')
CLSA_m$FUL_FSTR_COVX[CLSA_m$FUL_FSTR_COVX %in% c(-88888,3,9,8)]<-NA

#### Walk to neighborhood
table(CLSA_m$FUL_WK23B_COVX, useNA = 'ifany')
CLSA_m$FUL_WK23B_COVX[CLSA_m$FUL_WK23B_COVX %in% c(-88888,3,9,8)]<-NA

## Mental Health
#### Depression Scale
table(CLSA_m$DEP_CESD10_COVX, useNA = 'ifany')
CLSA_m$DEP_CESD10_COVX[CLSA_m$DEP_CESD10_COVX %in% c(-77772, -77771)]<-NA

#### Anxiety Scale
table(CLSA_m$GAD_NBRMIS_COVX, useNA = 'ifany')

## Save the dataset
save(CLSA_m, file = "~/dbs-vs-venous-antibodies/1_data/private/CLSA_m.RData")
```

## Updates Aug 21st 2023: CLSA quantitative assay results are availble, merge it
```{r}
COVID_19_Ab_Numeric <- read.csv("~/dbs-vs-venous-antibodies/1_data/private/2209005_COVID-19_Antibody_SpecialRequest_APL_test_results.csv")

# looks good, now merge those two
CLSA_mn<-merge(CLSA_m, COVID_19_Ab_Numeric, by = "entity_id", all=FALSE)
# We got N=13124 Obs in the merged dataset

# Save the Merged data with numeric values
save(CLSA_mn, file = '~/dbs-vs-venous-antibodies/1_data/private/CLSA_mn.RData')
```

## In the merged data, check Anti-S dist among DBS (ADM=2) and Venous (ADM=1)
```{r}
# DBS: ADM=2, nagative
summary(CLSA_mn$SPIKE_ANTIBODY[CLSA_mn$SER_ADM_COV==2 &
                                      CLSA_mn$SER_SPIKE_COV==0])
sd(CLSA_mn$SPIKE_ANTIBODY[CLSA_mn$SER_ADM_COV==2 &
                                      CLSA_mn$SER_SPIKE_COV==0], na.rm = T)

# DBS: ADM=2, Positive
summary(CLSA_mn$SPIKE_ANTIBODY[CLSA_mn$SER_ADM_COV==2 &
                                      CLSA_mn$SER_SPIKE_COV==1])
sd(CLSA_mn$SPIKE_ANTIBODY[CLSA_mn$SER_ADM_COV==2 &
                                      CLSA_mn$SER_SPIKE_COV==1], na.rm = T)

# Venous: ADM=1, nagative
summary(CLSA_mn$SPIKE_ANTIBODY[CLSA_mn$SER_ADM_COV==1 &
                                      CLSA_mn$SER_SPIKE_COV==0])
sd(CLSA_mn$SPIKE_ANTIBODY[CLSA_mn$SER_ADM_COV==1 &
                                      CLSA_mn$SER_SPIKE_COV==0], na.rm = T)

# Venous: ADM=1, Positive
summary(CLSA_mn$SPIKE_ANTIBODY[CLSA_mn$SER_ADM_COV==1 &
                                      CLSA_mn$SER_SPIKE_COV==1])
sd(CLSA_mn$SPIKE_ANTIBODY[CLSA_mn$SER_ADM_COV==1 &
                                      CLSA_mn$SER_SPIKE_COV==1], na.rm = T)

```

## In the merged data, check Anti-N dist among DBS (ADM=1) and Venous (ADM=0)
```{r}
# DBS: ADM=2, nagative
summary(CLSA_mn$NUCLEOCAPSID_ANTIBODY[CLSA_mn$SER_ADM_COV==2 &
                                      CLSA_mn$SER_NUCLEOCAPSID_COV==0])
sd(CLSA_mn$NUCLEOCAPSID_ANTIBODY[CLSA_mn$SER_ADM_COV==2 &
                                      CLSA_mn$SER_NUCLEOCAPSID_COV==0], na.rm = T)

# DBS: ADM=2, Positive
summary(CLSA_mn$NUCLEOCAPSID_ANTIBODY[CLSA_mn$SER_ADM_COV==2 &
                                      CLSA_mn$SER_NUCLEOCAPSID_COV==1])
sd(CLSA_mn$NUCLEOCAPSID_ANTIBODY[CLSA_mn$SER_ADM_COV==2 &
                                      CLSA_mn$SER_NUCLEOCAPSID_COV==1], na.rm = T)

# Venous: ADM=1, nagative
summary(CLSA_mn$NUCLEOCAPSID_ANTIBODY[CLSA_mn$SER_ADM_COV==1 &
                                      CLSA_mn$SER_NUCLEOCAPSID_COV==0])
sd(CLSA_mn$NUCLEOCAPSID_ANTIBODY[CLSA_mn$SER_ADM_COV==1 &
                                      CLSA_mn$SER_NUCLEOCAPSID_COV==0], na.rm = T)

# Venous: ADM=1, Positive
summary(CLSA_mn$NUCLEOCAPSID_ANTIBODY[CLSA_mn$SER_ADM_COV==1 &
                                      CLSA_mn$SER_NUCLEOCAPSID_COV==1])
sd(CLSA_mn$NUCLEOCAPSID_ANTIBODY[CLSA_mn$SER_ADM_COV==1 &
                                      CLSA_mn$SER_NUCLEOCAPSID_COV==1], na.rm = T)

```


## Two cut-off points were applied, need to find a time when they applies new COI
```{r}
# Date - start of the interview
str(CLSA_mn$start_datetime_COV)
# Character, but can be ordered

# Anti-N 0.155-0.353, Anti-N, DBS, Positive results
date_DBS_p<-CLSA_mn$start_datetime_COV[CLSA_mn$SER_ADM_COV==2 &
                           CLSA_mn$SER_NUCLEOCAPSID_COV==1 &
                           CLSA_mn$NUCLEOCAPSID_ANTIBODY >= 0.155 & 
                           CLSA_mn$NUCLEOCAPSID_ANTIBODY < 0.353]
# Same above, but negative
date_DBS_n<-CLSA_mn$start_datetime_COV[CLSA_mn$SER_ADM_COV==2 &
                           CLSA_mn$SER_NUCLEOCAPSID_COV==0 &
                           CLSA_mn$NUCLEOCAPSID_ANTIBODY >= 0.155 & 
                           CLSA_mn$NUCLEOCAPSID_ANTIBODY < 0.353]

max(date_DBS_p)
min(date_DBS_p[date_DBS_p>0])
# 2020/11/20 - 2021-06-22

max(date_DBS_n)
min(date_DBS_n[date_DBS_n>0])
#2020/11/17 - 2021/08/31

# Anti-N 0.103-0.24?, Anti-N, Venous, Positive results
date_VBS_p<-CLSA_mn$start_datetime_COV[CLSA_mn$SER_ADM_COV==1 &
                           CLSA_mn$SER_NUCLEOCAPSID_COV==1 &
                           CLSA_mn$NUCLEOCAPSID_ANTIBODY >= 0.103 & 
                           CLSA_mn$NUCLEOCAPSID_ANTIBODY < 0.2400001]
# Same above, but negative
date_VBS_n<-CLSA_mn$start_datetime_COV[CLSA_mn$SER_ADM_COV==1 &
                           CLSA_mn$SER_NUCLEOCAPSID_COV==0 &
                           CLSA_mn$NUCLEOCAPSID_ANTIBODY >= 0.103 & 
                           CLSA_mn$NUCLEOCAPSID_ANTIBODY < 0.2400001]

max(date_VBS_p)
min(date_VBS_p[date_VBS_p>0])
# 2020/11/01 - 2021-07-05

max(date_VBS_n)
min(date_VBS_n[date_VBS_n>0])
# 2021/03/14 - 2021/07/19
```
## Give another try with ICQ_start_datetime_COV (DCS visiting date)
```{r}
# Anti-N 0.103-0.24?, Anti-N, Venous, Positive results
DCS_date_VBS_p<-(CLSA_mn$ICQ_start_datetime_COV[CLSA_mn$SER_ADM_COV==1 &
                           CLSA_mn$SER_NUCLEOCAPSID_COV==1 &
                           CLSA_mn$NUCLEOCAPSID_ANTIBODY >= 0.103 & 
                           CLSA_mn$NUCLEOCAPSID_ANTIBODY < 0.2400001])
max(DCS_date_VBS_p)
min(DCS_date_VBS_p)
#2020-11-01 - 2021-07-05

# Same above, but negative
DCS_date_VBS_n<-(CLSA_mn$ICQ_start_datetime_COV[CLSA_mn$SER_ADM_COV==1 &
                           CLSA_mn$SER_NUCLEOCAPSID_COV==0 &
                           CLSA_mn$NUCLEOCAPSID_ANTIBODY >= 0.103 & 
                           CLSA_mn$NUCLEOCAPSID_ANTIBODY < 0.2400001])
max(DCS_date_VBS_n)
min(DCS_date_VBS_n)
#2020-11-09 - 2021-05-14
```
#### CoIs Investigation Conclusion: 
In two time stamps variables we have in CLSA dataset, they are mostly overlapping between two groups. we can not differentiate those two reagent groups just using time variables. For now we can just leave it there but need to **come back and figure it out** later in the future.

Alton's comments: The order they ran them on batches might not necessarily be the order that the sample was collected so that's not too surprising.

***
## Check the numbers in each track
```{r}
## Original CLSA_COVID data, N=28,565
str(CLSA_Covid$cohort)
table(CLSA_Covid$cohort, useNA = 'ifany')
# Comp 18,533, Trac 10,032

## Merged data with co-variates and assay results, N=13,124
table(CLSA_mn$cohort, useNA = 'ifany')
# Comp 7678, Trac 5446

table(CLSA_mn$cohort, CLSA_mn$SER_ADM_COV, useNA = 'ifany')
# No VBS sample in tracking group, makes sense. 
```
The venous blood sample all came from the **comprehensive cohort**. Those people were randomly selected from within **25-50 kms** from DCS. This could be the possible explanation of the "50-km cut-off" on traveling distances.

To find possible factors related to sampling methods (VBS vs DBS), first we need to exclude traveling distances and relating factors.  The easiest way is only taking comprehensive track into consideration. A harder way is adding those within "25-50 km" ring in the tracking cohort, with DBS (N=5446).

## Plot the hist of +/-
```{r}
ax <- pretty()

hgA <- hist(CLSA_mn$NUCLEOCAPSID_ANTIBODY[CLSA_mn$SER_ADM_COV==2 &
              CLSA_mn$SER_NUCLEOCAPSID_COV==0], 
              breaks = ax, plot = FALSE) # Save first histogram data
hgB <- hist(CLSA_mn$NUCLEOCAPSID_ANTIBODY[CLSA_mn$SER_ADM_COV==2 &
              CLSA_mn$SER_NUCLEOCAPSID_COV==1], 
              breaks = 50, plot = FALSE) # Save 2nd histogram data

plot(hgA, col = 'lightblue') # Plot 1st histogram using a transparent color
plot(hgB, col = 'coral', add = TRUE) # Add 2nd histogram using different color

## Not good, too much diff between those two groups
```


## Create Alberta Subset
```{r}
# Create Alberta Subset
CLSA_mAB<-CLSA_m[CLSA_m$PROV_COVID==48,]
# N=1486 in Alberta

# Save the subset
save(CLSA_mAB, file = "~/dbs-vs-venous-antibodies/1_data/private/CLSA_Alberta_PSM.RData")

# Add Travel Distance Var (run this code when dist file is all-set)
FSA_Center_fm<-select(FSA_Center_small, CFSAUID, Gmap_dist, fix_ind)
CLSA_mAB<-merge(CLSA_mAB, FSA_Center_fm, by.x = "FSA_COVID", by.y = "CFSAUID",
                all.x = TRUE)
```

## Histogram: Show the distribution of Traveling Distance

```{r}
## First, show the dist in one group
hist(CLSA_mAB$Gmap_dist/1000, breaks = 20)
# Looks like most of the participants live within 50km of the DCS at Calgary

## Then, stratified by VBS vs DBS
## VBS
hist(CLSA_mAB[CLSA_mAB$SER_ADM_COV==1,]$Gmap_dist/1000, breaks = 20)
# Looks like the cutting point is ~50 km
## DBS
hist(CLSA_mAB[CLSA_mAB$SER_ADM_COV==0,]$Gmap_dist/1000, breaks = 20)

## VBS with dist <=50
table(CLSA_mAB[CLSA_mAB$Gmap_dist/1000<=50,]$SER_ADM_COV, useNA = 'ifany')
```

## Now built a logistic regression model, using age, sex and urbanicity

```{r}
lm01<-glm(SER_ADM_COV~AGE_NMBR_COVID + SEX_CLSA +
                      relevel(as.factor(URBAN_RURAL_COVID),ref = "0"),
    data=CLSA_mAB, family = binomial(link = "logit"))
summary(lm01)

# Same model, but use Urban Core (=1) as reference
lm01.a<-glm(SER_ADM_COV~AGE_NMBR_COVID + SEX_CLSA +
                      relevel(as.factor(URBAN_RURAL_COVID),ref = "1"),
    data=CLSA_mAB, family = binomial(link = "logit"))
summary(lm01.a)
```

## Lm02, logistic regression model replace urban/rural with traveling dist

## This model is only useful when dist\<=50, for those lives further they will use DBS only

```{r}
# Only includes those <50 km
lm02<-glm(SER_ADM_COV~AGE_NMBR_COVID + SEX_CLSA + Gmap_dist,
    data=CLSA_mAB[CLSA_mAB$Gmap_dist/1000<=50,], family = binomial(link = "logit"))
summary(lm02)

# 10-40 km
lm02.a<-glm(SER_ADM_COV~AGE_NMBR_COVID + SEX_CLSA + Gmap_dist,
    data=CLSA_mAB[CLSA_mAB$Gmap_dist/1000<=40 & 
                  CLSA_mAB$Gmap_dist/1000>10,], family = binomial(link = "logit"))
summary(lm02.a)

# Try Urban_Rural
lm02.b<-glm(SER_ADM_COV~AGE_NMBR_COVID + SEX_CLSA +
                      relevel(as.factor(URBAN_RURAL_COVID),ref = "1"),
    data=CLSA_mAB[CLSA_mAB$Gmap_dist/1000<=50,], family = binomial(link = "logit"))
summary(lm02.b)
```

```{r}
# Let's see hot ROC looks like (prop be bad)
#ROC-curve using pROC library
library(pROC)


# roc_score=roc(CLSA_m$SER_ADM_COV, lm01)
# plot(roc_score ,main ="ROC curve -- Logistic Regression ")
```

## An unadjusted Comparison - tables

## Required by Alton, after meeting on 06/26

```{r}
# Create a subset for <50 km
CLSA_mAB50<-CLSA_mAB[CLSA_mAB$Gmap_dist/1000<=50,]

# Age
var.test(CLSA_mAB50$AGE_NMBR_COVID~CLSA_mAB50$SER_ADM_COV)
t.test(CLSA_mAB50$AGE_NMBR_COVID~CLSA_mAB50$SER_ADM_COV, var.equal=TRUE)

summary(CLSA_mAB50$AGE_NMBR_COVID[CLSA_mAB50$SER_ADM_COV==0])
sd(CLSA_mAB50$AGE_NMBR_COVID[CLSA_mAB50$SER_ADM_COV==0], na.rm = T)
summary(CLSA_mAB50$AGE_NMBR_COVID[CLSA_mAB50$SER_ADM_COV==1])
sd(CLSA_mAB50$AGE_NMBR_COVID[CLSA_mAB50$SER_ADM_COV==1], na.rm = T)
```

## Gmap Dist

```{r}
var.test(CLSA_mAB50$Gmap_dist~CLSA_mAB50$SER_ADM_COV)
t.test(CLSA_mAB50$Gmap_dist~CLSA_mAB50$SER_ADM_COV, var.equal=TRUE)
sd(CLSA_mAB50$Gmap_dist[CLSA_mAB50$SER_ADM_COV==0])
sd(CLSA_mAB50$Gmap_dist[CLSA_mAB50$SER_ADM_COV==1])
```

## Depression 10-scale

```{r}
var.test(DEP_CESD10_COVX~SER_ADM_COV, 
         data = CLSA_mAB50[CLSA_mAB50$DEP_CESD10_COVX>=0,])
t.test(DEP_CESD10_COVX~SER_ADM_COV, 
        data = CLSA_mAB50[CLSA_mAB50$DEP_CESD10_COVX>=0,], var.equal=FALSE)
sd(CLSA_mAB50$DEP_CESD10_COVX[CLSA_mAB50$SER_ADM_COV==0 &
                              CLSA_mAB50$DEP_CESD10_COVX>=0], na.rm = T)
sd(CLSA_mAB50$DEP_CESD10_COVX[CLSA_mAB50$SER_ADM_COV==1 &
                              CLSA_mAB50$DEP_CESD10_COVX>=0], na.rm = T)

```

## Anxiety Scale

```{r}
var.test(GAD_NBRMIS_COVX~SER_ADM_COV, 
         data = CLSA_mAB50[CLSA_mAB50$GAD_NBRMIS_COVX>=0,])
t.test(GAD_NBRMIS_COVX~SER_ADM_COV, 
        data = CLSA_mAB50[CLSA_mAB50$GAD_NBRMIS_COVX>=0,], var.equal=FALSE)
sd(CLSA_mAB50$GAD_NBRMIS_COVX[CLSA_mAB50$SER_ADM_COV==0 &
                              CLSA_mAB50$GAD_NBRMIS_COVX>=0], na.rm = T)
sd(CLSA_mAB50$GAD_NBRMIS_COVX[CLSA_mAB50$SER_ADM_COV==1 &
                              CLSA_mAB50$GAD_NBRMIS_COVX>=0], na.rm = T)

```

## Making prop tables

```{r}
# SEX
table(CLSA_mAB50$SEX_CLSA, CLSA_mAB50$SER_ADM_COV)
prop.table(table(CLSA_mAB50$SEX_CLSA, CLSA_mAB50$SER_ADM_COV),
           margin = 2)
chisq.test(table(CLSA_mAB50$SEX_CLSA, CLSA_mAB50$SER_ADM_COV))

# Urban_rural
t1<-table(CLSA_mAB50$URBAN_RURAL_COVID, CLSA_mAB50$SER_ADM_COV)
t1
round(prop.table(t1, margin = 2), digits = 4)
chisq.test(t1)

# Education
t1<-table(CLSA_mAB50$SER_EDU_COV, CLSA_mAB50$SER_ADM_COV)
t1
round(prop.table(t1, margin = 2), digits = 4)
chisq.test(t1)

# Mobility
#### Stand up
table(CLSA_mAB50$FUL_SIT1H_COVX, useNA = 'ifany')
t1<-table(CLSA_mAB50$FUL_SIT1H_COVX[CLSA_mAB50$FUL_SIT1H_COVX>0], 
          CLSA_mAB50$SER_ADM_COV[CLSA_mAB50$FUL_SIT1H_COVX>0])
t1
round(prop.table(t1, margin = 2), digits = 4)
chisq.test(t1)
#### Walk up/down stairs
table(CLSA_mAB50$FUL_FSTR_COVX, useNA = 'ifany')
t1<-table(CLSA_mAB50$FUL_FSTR_COVX[CLSA_mAB50$FUL_FSTR_COVX>0], 
          CLSA_mAB50$SER_ADM_COV[CLSA_mAB50$FUL_FSTR_COVX>0])
t1
round(prop.table(t1, margin = 2), digits = 4)
chisq.test(t1)

#### Walk to neighborhood
table(CLSA_mAB50$FUL_WK23B_COVX, useNA = 'ifany')
t1<-table(CLSA_mAB50$FUL_WK23B_COVX[CLSA_mAB50$FUL_WK23B_COVX>0], 
          CLSA_mAB50$SER_ADM_COV[CLSA_mAB50$FUL_WK23B_COVX>0])
t1
round(prop.table(t1, margin = 2), digits = 4)
chisq.test(t1)

## The Outcome var
t1<-table(CLSA_mAB50$SER_NUCLEOCAPSID_COV, CLSA_mAB50$SER_ADM_COV)
t1
round(prop.table(t1, margin = 2), digits = 4)
chisq.test(t1)
```
